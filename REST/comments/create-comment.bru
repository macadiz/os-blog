meta {
  name: Create Comment
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/comments/{{testPostId}}
  body: json
  auth: none
}

body:json {
  {
    "content": "This is a test comment for the blog post. Testing the comment system functionality.",
    "authorEmail": "test.commenter@example.com",
    "authorName": "Test Commenter"
  }
}

assert {
  res.status: eq 201
  res.body.id: isDefined
  res.body.content: eq This is a test comment for the blog post. Testing the comment system functionality.
  res.body.authorName: eq Test Commenter
  res.body.isApproved: eq false
  res.body.message: contains approval
}

tests {
  test("Comment is created successfully", function() {
    const comment = res.getBody();
    
    expect(comment.id).to.be.a("string");
    expect(comment.content).to.equal("This is a test comment for the blog post. Testing the comment system functionality.");
    expect(comment.authorName).to.equal("Test Commenter");
    expect(comment.isApproved).to.be.false;
    expect(comment.createdAt).to.be.a("string");
    expect(comment.message).to.include("approval");
    
    // Store comment ID for future tests
    bru.setEnvVar("testCommentId", comment.id);
  });
}